buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.+'
    }
}

plugins {
    id "net.ltgt.apt" version "0.20"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'
apply plugin: 'war'
apply plugin: 'com.google.cloud.tools.appengine'  // App Engine tasks

group = 'org.roorkee'
version = '0.0.1-SNAPSHOT'

description = "rkerestapi"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots' // SNAPSHOT repository (if needed)
    }
    mavenCentral()
    jcenter()
}

ext {
    set('springCloudVersion', 'Greenwich.RELEASE')
}

test {
    environment "GOOGLE_APPLICATION_CREDENTIALS", "test-cred.json"
}

dependencies {
    compile 'com.google.appengine:appengine-api-1.0-sdk:+'  // Latest App Engine Api's
    compile 'com.google.appengine.tools:appengine-gcs-client:+'
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'jstl:jstl:1.2'
    compile 'org.apache.commons:commons-lang3:+'
    implementation ('org.springframework.boot:spring-boot-starter-data-rest'){
        exclude(module: 'spring-boot-starter-tomcat')
    }
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile 'org.projectlombok:lombok:+'
    annotationProcessor 'org.projectlombok:lombok'

    testCompile 'junit:junit:4.12'
    testCompile 'com.google.truth:truth:0.33'

    testCompile 'com.google.appengine:appengine-testing:+'
    testCompile 'com.google.appengine:appengine-api-stubs:+'
    testCompile 'com.google.appengine:appengine-tools-sdk:+'
}

// Always run unit tests
appengineDeploy.dependsOn test
appengineStage.dependsOn test
appengine {  // App Engine tasks configuration
  deploy {   // deploy configuration

  }
}

test {
  useJUnit()
  testLogging.showStandardStreams = true
  beforeTest { descriptor ->
     logger.lifecycle("test: " + descriptor + "  Running")
  }

  onOutput { descriptor, event ->
     logger.lifecycle("test: " + descriptor + ": " + event.message )
  }
  afterTest { descriptor, result ->
    logger.lifecycle("test: " + descriptor + ": " + result )
  }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}